// ... existing code ...

module.exports = defineConfig({
  projectConfig: {
    // ... your projectConfig ...
  },
  modules: [
    // ... your other modules (payload, payment) ...

    {
      resolve: "@medusajs/medusa/file",
      options: {
        providers: [
          {
            resolve: "medusa-file-s3",
            id: "s3",
            options: {
              s3_url: process.env.S3_URL,
              bucket: process.env.S3_BUCKET,
              prefix: process.env.S3_PREFIX, // optional
              region: process.env.S3_REGION,
              access_key_id: process.env.S3_ACCESS_KEY_ID,
              secret_access_key: process.env.S3_SECRET_ACCESS_KEY,
              // ðŸ‘‡ R2-SPECIFIC CONFIGURATIONS
              endpoint: process.env.S3_ENDPOINT, // Pass the R2 API endpoint
              aws_config_object: {
                forcePathStyle: true, // Crucial for R2/S3-compatible storage
              },
            },
          },
        ],
      },
    },

    // ... your other modules ...
  ],
})


 {

            id: "s3",
            options: {
              s3_url: process.env.S3_URL,
              bucket: process.env.S3_BUCKET,
              prefix: process.env.S3_PREFIX,
              region: process.env.S3_REGION,
              access_key_id: process.env.S3_ACCESS_KEY_ID,
              secret_access_key: process.env.S3_SECRET_ACCESS_KEY,
              endpoint: process.env.S3_ENDPOINT, // Pass the R2 API endpoint
              aws_config_object: {
                forcePathStyle: true, // Crucial for R2/S3-compatible storage
              },
            },
          },